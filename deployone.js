// Generated by CoffeeScript 1.4.0
(function() {
  var AWS, ec2, fs, interval, params, script, showInstanceDetails;

  AWS = require('aws-sdk');

  fs = require('fs');

  AWS.config.loadFromPath('./credentials.json');

  AWS.config.update({
    region: 'us-east-1'
  });

  ec2 = new AWS.EC2().client;

  script = fs.readFileSync('./initinstance').toString('base64');

  interval = function(ms, func) {
    return setInterval(func, ms);
  };

  showInstanceDetails = function(id) {
    var params;
    params = {
      InstanceIds: [id]
    };
    return ec2.describeInstances(params, function(err, data) {
      var _ref;
      console.log('.');
      console.log("Instance data:");
      console.log(JSON.stringify(data, null, 4));
      console.log('------');
      console.log("Instance public IP: " + ((_ref = data.Reservations[0].Instances) != null ? _ref[0].PublicIpAddress : void 0));
      return process.exit(0);
    });
  };

  params = {
    ImageId: 'ami-7539b41c',
    MinCount: 1,
    MaxCount: 1,
    UserData: script,
    InstanceType: 't1.micro',
    SecurityGroups: ['quicklaunch-0'],
    KeyName: 'bob1'
  };

  ec2.runInstances(params, function(err, data) {
    if (err != null) {
      console.log('There was an error launching the instance:');
      return console.log(err);
    } else {
      console.log("Instance launched:");
      console.log(JSON.stringify(data, null, 4));
      console.log("Waiting for boot..");
      return interval(2000, function() {
        var which, _ref;
        which = {
          InstanceIds: [data != null ? (_ref = data.Instances) != null ? _ref[0].InstanceId : void 0 : void 0]
        };
        return ec2.describeInstanceStatus(which, function(err, data) {
          var status, _ref1, _ref2;
          if (err != null) {
            console.log('Error getting instance status.');
            return console.log(err);
          } else {
            process.stdout.write('.');
            status = (_ref1 = data.InstanceStatuses) != null ? (_ref2 = _ref1[0].InstanceState) != null ? _ref2.Name : void 0 : void 0;
            if (status === 'running') {
              return showInstanceDetails(which.InstanceIds[0]);
            }
          }
        });
      });
    }
  });

}).call(this);
